@page "/category/update/{id:int}"
@page "/category/create"

@inject ICategoryRepository CategoryRepository

@if (_isProcessing)
{
    <div class="position-absolute w-75 h-75 d-flex flex-column align-items-center bg-white justify-content-center">
        <img src="images/loading.gif" alt="loading"/>
    </div>
}
else
{
    <div class="card shadow border-0 mt-4">
        <div class="card-header bg-black bg-gradient ml-0 py-3">
            <div class="row">
                <div class="col-12 text-center">
                    <h2 class="text-white py-2"> @(Id == 0 ? "Create" : "Update") Category</h2>
                </div>
            </div>
        </div>
        <div class="card-body p-4">
            <div class="col-12 text-end">
                <a href="category/create" class="btn btn-secondary btn-lg m-4" style="width: 250px">
                    <i class="bi bi-plus-square"></i>Add New Category
                </a>
            </div>

        </div>
    </div>
}

@code {
    private bool _isProcessing = true;
    [SupplyParameterFromForm] private Category Category { get; set; } = new Category();
    [Parameter] public int Id { get; set; }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await LoadCategoryAsync();
            _isProcessing = false;
            StateHasChanged();
        }
    }

    private async Task LoadCategoryAsync()
    {
        if (Id == 0) return;

        Category = await CategoryRepository.GetAsync(Id);
    }

}